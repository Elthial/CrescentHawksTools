using System;
using System.Collections.Generic;
using System.Text;

namespace InceptionTools
{

    public class Weapon
    {
        public Weapon(Byte[] RawData)
        {
            Name = System.Text.Encoding.Default.GetString(RawData, 0, 10);
        }

        public string Name {get; }
    }

    public class GameData
    {
        //PPC and Kick might need special handling
        //0x21, 0x02 = Close combat?

        //Last value is skill type?

        public List<byte[]> WeaponData = new List<byte[]>(){
        new byte[] {0x43, 0x75, 0x64, 0x67, 0x65, 0x6C, 0x00, 0x00, 0x00, 0x00, 0x00,    0x11, 0x81, 0x00, 0x21, 0x02, 0x00}, //Cludgel
        new byte[] {0x4B, 0x6E, 0x69, 0x66, 0x65, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,    0x10, 0x81, 0x00, 0x21, 0x02, 0x00}, //Knife
        new byte[] {0x53, 0x77, 0x6F, 0x72, 0x64, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,    0x22, 0x81, 0x00, 0x21, 0x02, 0x00}, //Sword
        new byte[] {0x56, 0x69, 0x62, 0x72, 0x6F, 0x42, 0x6C, 0x61, 0x64, 0x65, 0x00,    0x30, 0x81, 0x00, 0x21, 0x02, 0x00}, //Vibroblade
        new byte[] {0x53, 0x68, 0x6F, 0x72, 0x74, 0x62, 0x6F, 0x77, 0x00, 0x00, 0x00,    0x11, 0x81, 0x00, 0x66, 0x09, 0x00}, //Shortbow
        new byte[] {0x4C, 0x6F, 0x6E, 0x67, 0x62, 0x6F, 0x77, 0x00, 0x00, 0x00, 0x00,    0x13, 0x81, 0x00, 0x87, 0x0D, 0x00}, //Longbow
        new byte[] {0x43, 0x72, 0x6F, 0x73, 0x73, 0x62, 0x6F, 0x77, 0x00, 0x00, 0x00,    0x23, 0x81, 0x00, 0x88, 0x0E, 0x00}, //Crossbow
        new byte[] {0x50, 0x69, 0x73, 0x74, 0x6F, 0x6C, 0x00, 0x00, 0x00, 0x00, 0x00,    0x23, 0x81, 0x00, 0x65, 0x09, 0x01}, //Pistol
        new byte[] {0x52, 0x69, 0x66, 0x6C, 0x65, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,    0x30, 0x81, 0x00, 0xF0, 0x1F, 0x02}, //Rifle
        new byte[] {0x4D, 0x61, 0x63, 0x68, 0x69, 0x6E, 0x65, 0x47, 0x75, 0x6E, 0x00,    0x30, 0x84, 0x00, 0x88, 0x0B, 0x02}, //MachineGun
        new byte[] {0x53, 0x52, 0x20, 0x4D, 0x69, 0x73, 0x73, 0x69, 0x6C, 0x65, 0x00,    0x02, 0x01, 0x00, 0xFF, 0x28, 0x03}, //SR Missile
        new byte[] {0x49, 0x6E, 0x66, 0x65, 0x72, 0x6E, 0x6F, 0x00, 0x00, 0x00, 0x00,    0xFF, 0x01, 0x00, 0xFF, 0x28, 0x03}, //Inferno
        new byte[] {0x4C, 0x61, 0x73, 0x65, 0x72, 0x50, 0x69, 0x73, 0x74, 0x6C, 0x00,    0x40, 0x81, 0x00, 0x87, 0x0D, 0x01}, //LaserPistol
        new byte[] {0x4C, 0x61, 0x73, 0x65, 0x72, 0x52, 0x69, 0x66, 0x6C, 0x65, 0x00,    0x42, 0x81, 0x00, 0xF6, 0x2B, 0x02}, //LaserRifle
        new byte[] {0x46, 0x6C, 0x61, 0x6D, 0x65, 0x72, 0x00, 0x00, 0x00, 0x00, 0x00,    0x20, 0x81, 0x00, 0x65, 0x07, 0x01}, //Flamer
        new byte[] {0x53, 0x6D, 0x61, 0x6C, 0x6C, 0x4C, 0x61, 0x73, 0x65, 0x72, 0x00,    0x03, 0x01, 0x01, 0x43, 0x0C, 0x03}, //SmallLaser
        new byte[] {0x4D, 0x65, 0x64, 0x20, 0x4C, 0x61, 0x73, 0x65, 0x72, 0x00, 0x00,    0x05, 0x01, 0x03, 0x87, 0x1E, 0x03}, //Med Laser
        new byte[] {0x4C, 0x61, 0x72, 0x67, 0x65, 0x4C, 0x61, 0x73, 0x65, 0x72, 0x00,    0x08, 0x01, 0x08, 0xCB, 0x30, 0x03}, //LargeLaser
        new byte[] {0x50, 0x50, 0x43, 0xD9, 0x1B, 0xB2, 0x00, 0x08, 0x00, 0xB0,          0x0A, 0x01, 0x3A, 0xED, 0x39, 0x03}, //PPC
        new byte[] {0x41, 0x75, 0x74, 0x6F, 0x43, 0x61, 0x6E, 0x6E, 0x2F, 0x32, 0x00,    0x02, 0x01, 0x41, 0xF0, 0x4B, 0x03}, //AutoCann/2
        new byte[] {0x41, 0x75, 0x74, 0x6F, 0x43, 0x61, 0x6E, 0x6E, 0x2F, 0x35, 0x00,    0x05, 0x01, 0x31, 0xED, 0x39, 0x03}, //AutoCann/5
        new byte[] {0x41, 0x75, 0x74, 0x6F, 0x43, 0x61, 0x6E, 0x6E, 0x31, 0x30, 0x00,    0x0A, 0x01, 0x03, 0xCB, 0x30, 0x03}, //AutoCan10
        new byte[] {0x41, 0x75, 0x74, 0x6F, 0x43, 0x61, 0x6E, 0x6E, 0x32, 0x30, 0x00,    0x14, 0x01, 0x07, 0x87, 0x1E, 0x03}, //AutoCan20
        new byte[] {0x4D, 0x61, 0x63, 0x68, 0x69, 0x6E, 0x65, 0x47, 0x75, 0x6E, 0x00,    0x02, 0x01, 0x00, 0x43, 0x0C, 0x03}, //MachineGun
        new byte[] {0x46, 0x6C, 0x61, 0x6D, 0x65, 0x72, 0x00, 0x00, 0x00, 0x00, 0x00,    0x02, 0x01, 0x03, 0x43, 0x0C, 0x03}, //Flamer
        new byte[] {0x4C, 0x52, 0x4D, 0x69, 0x73, 0x73, 0x69, 0x6C, 0x65, 0x35, 0x00,    0x01, 0x04, 0x62, 0xEF, 0x42, 0x03}, //LRMissile5
        new byte[] {0x4C, 0x52, 0x4D, 0x69, 0x73, 0x73, 0x69, 0x6C, 0x31, 0x30, 0x00,    0x01, 0x06, 0x64, 0xEF, 0x42, 0x03}, //LRMissil10
        new byte[] {0x4C, 0x52, 0x4D, 0x69, 0x73, 0x73, 0x69, 0x6C, 0x31, 0x35, 0x00,    0x01, 0x07, 0x65, 0xEF, 0x42, 0x03}, //LRMissil15
        new byte[] {0x4C, 0x52, 0x4D, 0x69, 0x73, 0x73, 0x69, 0x6C, 0x32, 0x30, 0x00,    0x01, 0x08, 0x66, 0xEF, 0x42, 0x03}, //LRMissil20
        new byte[] {0x53, 0x52, 0x4D, 0x69, 0x73, 0x73, 0x69, 0x6C, 0x65, 0x32, 0x00,    0x02, 0x02, 0x02, 0x87, 0x1E, 0x03}, //SMRissile2
        new byte[] {0x53, 0x52, 0x4D, 0x69, 0x73, 0x73, 0x69, 0x6C, 0x65, 0x34, 0x00,    0x02, 0x03, 0x03, 0x87, 0x1E, 0x03}, //SRMissile4
        new byte[] {0x53, 0x52, 0x4D, 0x69, 0x73, 0x73, 0x69, 0x6C, 0x65, 0x36, 0x00,    0x02, 0x05, 0x04, 0x87, 0x1E, 0x03}, //SRMissile6       
        new byte[] {0x4B, 0x69, 0x63, 0x6B, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,    0x00, 0x01, 0x00, 0x21, 0x02, 0x04},  //Kick
       };



       public List<byte[]> MechData = new List<byte[]>() {
            new byte[] {0x4C, 0x4F, 0x43, 0x55, 0x53, 0x54, 0x88, 0x00, 0xB2, 0x20, 0x09, 0x00, 0xB0, 0x00, 0x14, 0x04, 0x08,
                        0x08, 0x08, 0x0A, 0x04, 0x08, 0x08, 0x02, 0x02, 0x02, 0x03, 0x05, 0x04, 0x03, 0x06, 0x03, 0x05, 0x04,
                        0xCF, 0xCF, 0x06, 0x64, 0x64, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x18, 0x00,
                        0x00, 0x00, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00,
                        0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x22, 0x00, 0x22, 0x00, 0x11, 0x00, 0x00, 0x04,
                        0x08, 0x08, 0x08, 0x0A, 0x04, 0x08, 0x08, 0x02, 0x02, 0x02, 0x03, 0x05, 0x04, 0x03, 0x06, 0x03, 0x05,
                        0x04, 0xCF, 0xCF, 0x64, 0x64, 0xFF, 0x5F, 0x00, 0xB2, 0x00, 0x0A, 0x00, 0xB0, 0x01, 0x00, 0xFF, 0x00,
                        0x00 }, //LOCUST 

            new byte[] {0x57, 0x41, 0x53, 0x50, 0x09, 0x00, 0xB2, 0x20, 0x0B, 0x00, 0xB0, 0x00, 0x14, 0x04, 0x06, 0x05, 0x04,
                        0x06, 0x04, 0x06, 0x05, 0x02, 0x04, 0x02, 0x03, 0x05, 0x04, 0x03, 0x06, 0x03, 0x05, 0x04, 0xFF, 0xFF,
                        0x04, 0xFF, 0x32, 0x1A, 0x00, 0xB2, 0x00, 0x08, 0x00, 0xB0, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00,
                        0x00, 0x00, 0x22, 0x22, 0x22, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x22,
                        0x22, 0x22, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x06, 0x05, 0x04,
                        0x06, 0x04, 0x06, 0x05, 0x02, 0x04, 0x02, 0x03, 0x05, 0x04, 0x03, 0x06, 0x03, 0x05, 0x04, 0xFF, 0xFF,
                        0xFF, 0x32, 0x3C, 0x00, 0xB2, 0x00, 0x0B, 0x00, 0xB0, 0x01, 0x00, 0xFF, 0x01, 0x00 }, //WASP 
            
            new byte[] {0x53, 0x54, 0x49, 0x4E, 0x47, 0x45, 0x52, 0x0C, 0x00, 0xB2, 0x20, 0x08, 0x00, 0xB0, 0x00, 0x14, 0x04,
                        0x06, 0x05, 0x04, 0x06, 0x04, 0x06, 0x05, 0x02, 0x04, 0x02, 0x03, 0x05, 0x04, 0x03, 0x06, 0x03, 0x05,
                        0x04, 0xFF, 0xFF, 0x04, 0x64, 0xFF, 0x64, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x06, 0x18,
                        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x22, 0x22, 0x22, 0x00, 0x00, 0x00, 0x00, 0x11, 0x18, 0x00, 0x00,
                        0x00, 0x00, 0x00, 0x22, 0x22, 0x22, 0x3C, 0x00, 0xB2, 0x00, 0x0B, 0x00, 0xB0, 0x04, 0x06, 0x05, 0x04,
                        0x06, 0x04, 0x06, 0x05, 0x02, 0x04, 0x02, 0x03, 0x05, 0x04, 0x03, 0x06, 0x03, 0x05, 0x04, 0xFF, 0xFF,
                        0x64, 0xFF, 0x64, 0x18, 0x00, 0xB2, 0x00, 0x0A, 0x00, 0xB0, 0x01, 0x00, 0xFF, 0x02, 0x00 },//STINGER
            
            new byte[] {0x43, 0x4F, 0x4D, 0x4D, 0x41, 0x4E, 0x44, 0x4F, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00, 0x19,
                        0x06, 0x06, 0x08, 0x06, 0x08, 0x06, 0x06, 0x08, 0x03, 0x04, 0x03, 0x04, 0x06, 0x06, 0x03, 0x08, 0x04,
                        0x06, 0x06, 0xFF, 0xFF, 0x06, 0xFF, 0x19, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00,
                        0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x22, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x00, 0x00,
                        0x00, 0x00, 0x00, 0x00, 0x22, 0x22, 0x4F, 0x00, 0xB2, 0x00, 0x09, 0x00, 0xB0, 0x20, 0x00, 0x00, 0x06,
                        0x06, 0x08, 0x06, 0x08, 0x06, 0x06, 0x08, 0x03, 0x04, 0x03, 0x04, 0x06, 0x06, 0x03, 0x08, 0x04, 0x06,
                        0x06, 0xFF, 0xFF, 0xFF, 0x19, 0x0F, 0x1B, 0x00, 0xB2, 0x00, 0x0A, 0x00, 0xB0, 0x01, 0x00, 0xFF, 0x03,
                        0x00 }, //COMMANDO
            
            new byte[] {0x43, 0x48, 0x41, 0x4D, 0x45, 0x4C, 0x45, 0x4F, 0x4E, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00, 0x32,
                        0x0A, 0x0A, 0x0C, 0x09, 0x10, 0x0A, 0x0A, 0x0C, 0x02, 0x03, 0x02, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00,
                        0x00, 0x00, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x64, 0x64, 0x00, 0x06, 0x06,
                        0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x10, 0x22, 0x22, 0x22, 0x00, 0x00, 0x12, 0x11, 0x00,
                        0x00, 0x00, 0x00, 0x00, 0x10, 0x10, 0x22, 0x22, 0x22, 0x00, 0x00, 0x22, 0x22, 0x22, 0x22, 0x18, 0x18,
                        0x00, 0x0A, 0x0A, 0x0C, 0x09, 0x10, 0x0A, 0x0A, 0x0C, 0x02, 0x03, 0x02, 0x00, 0x00, 0x00, 0x01, 0x01,
                        0x00, 0x00, 0x00, 0x6E, 0x00, 0xB2, 0xFF, 0x09, 0x00, 0xB0, 0x64, 0x64, 0x00, 0x00, 0x00, 0x00, 0x01,
                        0x00, 0xFF, 0xC8, 0x00 }, //CHAMELEON 
           
            new byte[] {0x4A, 0x45, 0x4E, 0x4E, 0x45, 0x52, 0x11, 0x00, 0xB2, 0x20, 0x09, 0x00, 0xB0, 0x00, 0x23, 0x04, 0x08,
                        0x06, 0x07, 0x0A, 0x04, 0x08, 0x06, 0x04, 0x03, 0x04, 0x06, 0x08, 0x08, 0x03, 0x0B, 0x06, 0x08, 0x08,
                        0xCF, 0xCF, 0x0A, 0xFF, 0xFF, 0xFF, 0xFF, 0x19, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x05, 0x11, 0x11,
                        0x26, 0x00, 0xB2, 0x00, 0x0C, 0x00, 0xB0, 0x11, 0x11, 0x02, 0x00, 0xB2, 0x00, 0x10, 0x00, 0xB0, 0x1F,
                        0x00, 0x00, 0x04, 0x08, 0x06, 0x07, 0x0A, 0x04, 0x08, 0x06, 0x04, 0x03, 0x04, 0x06, 0x08, 0x08, 0x03,
                        0x0B, 0x06, 0x08, 0x08, 0xCF, 0xCF, 0xFF, 0xFF, 0xFF, 0xFF, 0x19, 0x1D, 0x00, 0xB2, 0x00, 0x08, 0x00,
                        0xB0, 0x01, 0x00, 0xFF, 0x09, 0x00 }, //JENNER
            
            new byte[] {0x73, 0x70, 0x65, 0x63, 0x74, 0x61, 0x74, 0x6F, 0x72, 0x00, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00, 0x14,
                        0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x01, 0x00, 0x01, 0x01, 0x00,
                        0x01, 0x00, 0xCF, 0xCF, 0x06, 0x2C, 0x00, 0xB2, 0x00, 0x0C, 0x00, 0xB0, 0x18, 0x00, 0x00, 0x00, 0x00,
                        0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x22,
                        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x22, 0x00, 0x22, 0x00, 0x11, 0x00, 0x00, 0x04, 0x08, 0x08, 0x08,
                        0x0A, 0x04, 0x08, 0x08, 0x02, 0x02, 0x02, 0x03, 0x05, 0x04, 0x03, 0x06, 0x03, 0x05, 0x04, 0xCF, 0xCF,
                        0x64, 0x64, 0xFF, 0x3B, 0x00, 0xB2, 0x00, 0x0A, 0x00, 0xB0, 0x01, 0x00, 0xFF, 0x00, 0x00 }, //Spectator
           
            new byte[] {0x55, 0x52, 0x42, 0x41, 0x4E, 0x4D, 0x45, 0x43, 0x48, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00, 0x1E,
                        0x0A, 0x08, 0x0C, 0x09, 0x0B, 0x0A, 0x08, 0x0C, 0x04, 0x08, 0x04, 0x05, 0x07, 0x07, 0x03, 0x0A, 0x05,
                        0x07, 0x07, 0xCF, 0xCF, 0x02, 0xFF, 0x14, 0x2E, 0x00, 0xB2, 0x00, 0x08, 0x00, 0xB0, 0x02, 0x02, 0x10,
                        0x22, 0x22, 0x00, 0x00, 0x00, 0x00, 0x22, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x22, 0x22, 0x00,
                        0x00, 0x00, 0x00, 0x22, 0x22, 0x19, 0x00, 0xB2, 0x00, 0x0C, 0x00, 0xB0, 0x0A, 0x08, 0x0C, 0x09, 0x0B,
                        0x0A, 0x08, 0x0C, 0x04, 0x08, 0x04, 0x05, 0x07, 0x07, 0x03, 0x0A, 0x05, 0x07, 0x07, 0xCF, 0xCF, 0xFF,
                        0x14, 0xFF, 0xFF, 0x19, 0x1A, 0x00, 0xB2, 0x00, 0x08, 0x00, 0xB0, 0x01, 0x00, 0xFF, 0x06, 0x04, 0x00,
                        0xB2, 0x00, 0x0B, 0x00 } //URBANMECH
        };
    }
}
