using System;
using System.Collections.Generic;
using System.Text;

namespace InceptionTools
{

    public class Weapon
    {
        public Weapon(byte[] RawData)
        {
            Name = Encoding.Default.GetString(RawData, 0, 10);            
            Damage = RawData[11];
            Variable2 = RawData[12];
            Heat = RawData[13];
            Variable4 = RawData[14];
            Range = RawData[15];
            Skill = (Skill)RawData[16];
        }

        public string Name {get; }    //2ED9
        public int Damage { get; }      //2EE3
        public int Variable2 { get; }   //Shots?      //2EE4
        public int Heat { get; }          //2EE5
        public int Variable4 { get; }  //Sound effect?  //2EE6
        public int Range { get; }         //2EE7
        public Skill Skill { get; }      //2EE8

    }

    public class GameData
    {
        
        //0x21, 0x02 = Close combat?   

        public List<byte[]> WeaponData = new List<byte[]>(){                             //Damage    //Shots     //HEAT             //Range       //SKILL                     
        new byte[] {0x43, 0x75, 0x64, 0x67, 0x65, 0x6C, 0x00, 0x00, 0x00, 0x00, 0x00,      0x11,      0x81,       0x00,       0x21, 0x02,          0x00}, //Cludgel        - Type: Bows And Blades [Default]
        new byte[] {0x4B, 0x6E, 0x69, 0x66, 0x65, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,      0x10,      0x81,       0x00,       0x21, 0x02,          0x00}, //Knife          - Type: Bows And Blades
        new byte[] {0x53, 0x77, 0x6F, 0x72, 0x64, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,      0x22,      0x81,       0x00,       0x21, 0x02,          0x00}, //Sword          - Type: Bows And Blades
        new byte[] {0x56, 0x69, 0x62, 0x72, 0x6F, 0x42, 0x6C, 0x61, 0x64, 0x65, 0x00,      0x30,      0x81,       0x00,       0x21, 0x02,          0x00}, //Vibroblade     - Type: Bows And Blades
        new byte[] {0x53, 0x68, 0x6F, 0x72, 0x74, 0x62, 0x6F, 0x77, 0x00, 0x00, 0x00,      0x11,      0x81,       0x00,       0x66, 0x09,          0x00}, //Shortbow       - Type: Bows And Blades
        new byte[] {0x4C, 0x6F, 0x6E, 0x67, 0x62, 0x6F, 0x77, 0x00, 0x00, 0x00, 0x00,      0x13,      0x81,       0x00,       0x87, 0x0D,          0x00}, //Longbow        - Type: Bows And Blades
        new byte[] {0x43, 0x72, 0x6F, 0x73, 0x73, 0x62, 0x6F, 0x77, 0x00, 0x00, 0x00,      0x23,      0x81,       0x00,       0x88, 0x0E,          0x00}, //Crossbow       - Type: Bows And Blades
        new byte[] {0x50, 0x69, 0x73, 0x74, 0x6F, 0x6C, 0x00, 0x00, 0x00, 0x00, 0x00,      0x23,      0x81,       0x00,       0x65, 0x09,          0x01}, //Pistol         - Type: Slugthrowers
        new byte[] {0x52, 0x69, 0x66, 0x6C, 0x65, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,      0x30,      0x81,       0x00,       0xF0, 0x1F,          0x02}, //Rifle          - Type: Slugthrowers
        new byte[] {0x4D, 0x61, 0x63, 0x68, 0x69, 0x6E, 0x65, 0x47, 0x75, 0x6E, 0x00,      0x30,      0x84,       0x00,       0x88, 0x0B,          0x02}, //MachineGun     - Type: Slugthrowers
        new byte[] {0x53, 0x52, 0x20, 0x4D, 0x69, 0x73, 0x73, 0x69, 0x6C, 0x65, 0x00,      0x02,      0x01,       0x00,       0xFF, 0x28,          0x03}, //SRMissile      - Type: Anti-Mech
        new byte[] {0x49, 0x6E, 0x66, 0x65, 0x72, 0x6E, 0x6F, 0x00, 0x00, 0x00, 0x00,      0xFF,      0x01,       0x00,       0xFF, 0x28,          0x03}, //Inferno        - Type: Anti-Mech
        new byte[] {0x4C, 0x61, 0x73, 0x65, 0x72, 0x50, 0x69, 0x73, 0x74, 0x6C, 0x00,      0x40,      0x81,       0x00,       0x87, 0x0D,          0x01}, //LaserPistl
        new byte[] {0x4C, 0x61, 0x73, 0x65, 0x72, 0x52, 0x69, 0x66, 0x6C, 0x65, 0x00,      0x42,      0x81,       0x00,       0xF6, 0x2B,          0x02}, //LaserRifle
        new byte[] {0x46, 0x6C, 0x61, 0x6D, 0x65, 0x72, 0x00, 0x00, 0x00, 0x00, 0x00,      0x20,      0x81,       0x00,       0x65, 0x07,          0x01}, //Flamer           //14
        new byte[] {0x53, 0x6D, 0x61, 0x6C, 0x6C, 0x4C, 0x61, 0x73, 0x65, 0x72, 0x00,      0x03,      0x01,       0x01,       0x43, 0x0C,          0x03}, //SmallLaser - Heat: 1 Damage: 3 Range: 1
        new byte[] {0x4D, 0x65, 0x64, 0x20, 0x4C, 0x61, 0x73, 0x65, 0x72, 0x00, 0x00,      0x05,      0x01,       0x03,       0x87, 0x1E,          0x03}, //MedLaser   - Heat: 3 Damage: 5 Range: 3
        new byte[] {0x4C, 0x61, 0x72, 0x67, 0x65, 0x4C, 0x61, 0x73, 0x65, 0x72, 0x00,      0x08,      0x01,       0x08,       0xCB, 0x30,          0x03}, //LargeLaser - Heat: 8 Damage: 8
        new byte[] {0x50, 0x50, 0x43, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,      0x0A,      0x01,       0x3A,       0xED, 0x39,          0x03}, //PPC         - Heat: 10 - Damage: 10
        new byte[] {0x41, 0x75, 0x74, 0x6F, 0x43, 0x61, 0x6E, 0x6E, 0x2F, 0x32, 0x00,      0x02,      0x01,       0x41,       0xF0, 0x4B,          0x03}, //AutoCann/2 - Heat: 1 Damage: 2
        new byte[] {0x41, 0x75, 0x74, 0x6F, 0x43, 0x61, 0x6E, 0x6E, 0x2F, 0x35, 0x00,      0x05,      0x01,       0x31,       0xED, 0x39,          0x03}, //AutoCann/5 - Heat: 1 - Damage: 5
        new byte[] {0x41, 0x75, 0x74, 0x6F, 0x43, 0x61, 0x6E, 0x6E, 0x31, 0x30, 0x00,      0x0A,      0x01,       0x03,       0xCB, 0x30,          0x03}, //AutoCan10 - Heat: 3 - Damage: 10
        new byte[] {0x41, 0x75, 0x74, 0x6F, 0x43, 0x61, 0x6E, 0x6E, 0x32, 0x30, 0x00,      0x14,      0x01,       0x07,       0x87, 0x1E,          0x03}, //AutoCan20 - Heat: 7 - Damage: 20
        new byte[] {0x4D, 0x61, 0x63, 0x68, 0x69, 0x6E, 0x65, 0x47, 0x75, 0x6E, 0x00,      0x02,      0x01,       0x00,       0x43, 0x0C,          0x03}, //MachineGun - Heat: 0 - Damage 2++ inf
        new byte[] {0x46, 0x6C, 0x61, 0x6D, 0x65, 0x72, 0x00, 0x00, 0x00, 0x00, 0x00,      0x02,      0x01,       0x03,       0x43, 0x0C,          0x03}, //Flamer    - Heat: 3 - Damage 2++ inf
        new byte[] {0x4C, 0x52, 0x4D, 0x69, 0x73, 0x73, 0x69, 0x6C, 0x65, 0x35, 0x00,      0x01,      0x04,       0x62,       0xEF, 0x42,          0x03}, //LRMissile5  - Heat: 2 Damage: 1 per mis
        new byte[] {0x4C, 0x52, 0x4D, 0x69, 0x73, 0x73, 0x69, 0x6C, 0x31, 0x30, 0x00,      0x01,      0x06,       0x64,       0xEF, 0x42,          0x03}, //LRMissil10  - Heat: 4 Damage: 1 per mis
        new byte[] {0x4C, 0x52, 0x4D, 0x69, 0x73, 0x73, 0x69, 0x6C, 0x31, 0x35, 0x00,      0x01,      0x07,       0x65,       0xEF, 0x42,          0x03}, //LRMissil15  - Heat: 5 Damage: 1 per mis
        new byte[] {0x4C, 0x52, 0x4D, 0x69, 0x73, 0x73, 0x69, 0x6C, 0x32, 0x30, 0x00,      0x01,      0x08,       0x66,       0xEF, 0x42,          0x03}, //LRMissil20  - Heat: 6 Damage: 1 per mis
        new byte[] {0x53, 0x52, 0x4D, 0x69, 0x73, 0x73, 0x69, 0x6C, 0x65, 0x32, 0x00,      0x02,      0x02,       0x02,       0x87, 0x1E,          0x03}, //SMRissile2 - Heat: 2 - Damage: 2 per mis
        new byte[] {0x53, 0x52, 0x4D, 0x69, 0x73, 0x73, 0x69, 0x6C, 0x65, 0x34, 0x00,      0x02,      0x03,       0x03,       0x87, 0x1E,          0x03}, //SRMissile4 - Heat: 3 - Damage: 2 per mis
        new byte[] {0x53, 0x52, 0x4D, 0x69, 0x73, 0x73, 0x69, 0x6C, 0x65, 0x36, 0x00,      0x02,      0x05,       0x04,       0x87, 0x1E,          0x03}, //SRMissile6 - Heat: 4 - Damge: 2 per mis      
        new byte[] {0x4B, 0x69, 0x63, 0x6B, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,      0x00,      0x01,       0x00,       0x21, 0x02,          0x04},  //Kick
       };   
    }
}
/*
 * (+$80 - destroyed)
    $01 Knife
	$02 Sword
	$03 Vibroblade
	$04 Shortbow
	$05 Longbow
	$06 Crossbow
	$07 Pistol
	$08 Rifle
	$09 SMG
	$0A SRM
	$0B Inferno
	$0C Laser Gun
	$0D Laser Rifle
	$0E	- blank -
	$0F	- blank -
	$10 Small Laser
	$11 Medium Laser
	$12 Large Laser
	$13 PPC
	$14 AC/2
	$15 AC/5
	$16 AC/10
	$17 AC/20
	$18 Machine Gun
	$19 Flamer
	$1A LRM 5
	$1B LRM 10
	$1C LRM 15
	$1D LRM 20
	$1E SRM 2
	$1F SRM 4
	$20 SRM 6
	$21 Kick
	$22 Heat Sink
*/

// 3EDB:0190 -< 3EDB:0290 Is an array of memory locations


//foreach(byte[] b in data.WeaponData)
//{
//    var w = new Weapon(b);
//    Console.WriteLine("------------------------");
//    Console.WriteLine("Name:" + w.Name);
//    Console.WriteLine("Damage:" + w.Damage);
//    Console.WriteLine("???:" + w.Variable2);
//    Console.WriteLine("Heat:" + w.Heat);
//    Console.WriteLine("???:" + w.Variable4);
//    Console.WriteLine("Range:" + w.Range);
//    Console.WriteLine("Skill:" + w.Skill.ToString());
//}